//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace TTC2017.LiveContest.SimpleCodeDOM
{
    
    
    /// <summary>
    /// The public interface for Property
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Property))]
    [XmlDefaultImplementationTypeAttribute(typeof(Property))]
    public interface IProperty : IModelElement, IMember
    {
        
        /// <summary>
        /// The IsAbstract property
        /// </summary>
        bool IsAbstract
        {
            get;
            set;
        }
        
        /// <summary>
        /// The PropertyType property
        /// </summary>
        ITypeReference PropertyType
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Getter property
        /// </summary>
        IExpression Getter
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Setter property
        /// </summary>
        IExpression Setter
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the IsAbstract property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsAbstractChanging;
        
        /// <summary>
        /// Gets fired when the IsAbstract property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IsAbstractChanged;
        
        /// <summary>
        /// Gets fired before the PropertyType property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PropertyTypeChanging;
        
        /// <summary>
        /// Gets fired when the PropertyType property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PropertyTypeChanged;
        
        /// <summary>
        /// Gets fired before the Getter property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GetterChanging;
        
        /// <summary>
        /// Gets fired when the Getter property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> GetterChanged;
        
        /// <summary>
        /// Gets fired before the Setter property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SetterChanging;
        
        /// <summary>
        /// Gets fired when the Setter property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SetterChanged;
    }
}

